# ===============================
# Etapa 1: Build con Maven (usuario builder)
# ===============================
FROM maven:3.9-eclipse-temurin-21 AS builder

# Crear usuario de build no-root
RUN addgroup --system builder && adduser --system --ingroup builder builder

USER builder

WORKDIR /home/builder/app

# Copiar archivos con permisos adecuados
COPY --chown=builder:builder pom.xml ./
COPY --chown=builder:builder .mvn .mvn
COPY --chown=builder:builder mvnw .
RUN ./mvnw dependency:go-offline -B

COPY --chown=builder:builder src ./src
RUN ./mvnw clean package -DskipTests

# ===============================
# Etapa 2: Runtime optimizado (usuario spring)
# ===============================
FROM eclipse-temurin:21-jre-alpine

LABEL maintainer="tucorreo@empresa.com"
LABEL org.opencontainers.image.version="1.0.0"

RUN apk add --no-cache tzdata curl \
    && rm -rf /var/cache/apk/*

ENV TZ=America/Mexico_City
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"

# Crear usuario para entorno de ejecuci√≥n
RUN addgroup -S spring && adduser -S spring -G spring

WORKDIR /app

# Copiar artefacto compilado con los permisos adecuados
COPY --from=builder --chown=spring:spring /home/builder/app/target/*.jar app.jar

USER spring:spring

EXPOSE 8080
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]
